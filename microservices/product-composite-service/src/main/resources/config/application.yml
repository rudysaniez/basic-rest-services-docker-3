
logging:
  level:
    root: INFO

server.port: 7000
 
app:
  product-service:
    host: localhost
    port: 7001
    
  recommendation-service:
    host: localhost
    port: 7002
    
  review-service:
    host: localhost
    port: 7003
 
management:
  endpoints:
    web:
      exposure:
        include: info,health,env,metrics
      base-path: /management 

spring:
  jackson:
    deserialization:
      accept-single-value-as-array: true
    serialization:
      write-dates-as-timestamps: false
    generator:
      write-numbers-as-strings: false
    default-property-inclusion: NON_NULL #permits to not return fields with null value.
    date-format: yyyy-MM-dd'T'HH:mm:ssZ
    
  webflux:
    base-path: /api/v1
    
  cloud:
    stream:
      bindings:
        output-products:
          destination: products
          producer:
            required-groups: 
              - auditGroup
            
        output-recommendations:
          destination: recommendations
          producer:
            required-groups: 
              - auditGroup
            
        output-reviews:
          destination: reviews
          producer:
            required-groups:
              - auditGroup
              
api.pagination:
  page-number: 0
  page-size: 5
    
---
spring.profiles: docker-api

server.port: 9080

logging:
  level:
    '[com.me.work.example.microservices.core.composite]': DEBUG
    '[com.me.work.example.handler.http]': DEBUG
    
app:
  product-service:
    host: product
    port: 8081
    
  recommendation-service:
    host: recommendation
    port: 8082
    
  review-service:
    host: review
    port: 8083

---
spring.profiles: docker-rabbit

spring:
  cloud:
    stream:
      default-binder: rabbit
      
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: michael
    password: jordan

---
spring.profiles: docker-kafka

spring:
  cloud:
    stream:
      default-binder: kafka
    
      kafka:
        binder:
          brokers: kafka:9092
          replication-factor: 1
          auto-create-topics: true

---
spring.profiles: product-composite-swagger

api:
  common:
    version: 1.0.0
    title: Product-composite API
    description: The product-composite API is an example for the API implementation
    termsOfServiceUrl: MINE TERMS OF SERVICE URL
    license: License
    licenseUrl: MY LICENSE URL

    contact:
      name: Rudy SANIEZ
      url: https://github.com/rudysaniez
      email: rudysaniez@laposte.net
    